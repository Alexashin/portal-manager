from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, CallbackQuery
from filters import RoleFilter
from contexts import ModuleCreation
from aiogram.fsm.context import FSMContext
from keyboards.admin_keyboards import get_add_new_lesson_keyboard_markup
from keyboards.main_keyboards import admin_keyboard
from db import create_module, add_lesson

admin_router = Router()

# –°—Ç–∞—Ä—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥—É–ª—è
@admin_router.message(RoleFilter("manager"), Command("create_module"))
async def start_module_creation(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è üìö:")
    await state.set_state(ModuleCreation.waiting_for_module_title)

# –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è
@admin_router.message(ModuleCreation.waiting_for_module_title)
async def get_module_title(message: Message, state: FSMContext):
    await state.update_data(module_title=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥—É–ª—è üìù:")
    await state.set_state(ModuleCreation.waiting_for_module_description)

# –í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –º–æ–¥—É–ª—è
@admin_router.message(ModuleCreation.waiting_for_module_description)
async def get_module_description(message: Message, state: FSMContext):
    await state.update_data(module_description=message.text)
    await message.answer("–î–æ–±–∞–≤–∏–º –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫! –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞ üìñ:")
    await state.set_state(ModuleCreation.waiting_for_lesson_title)

# –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞
@admin_router.message(ModuleCreation.waiting_for_lesson_title)
async def get_lesson_title(message: Message, state: FSMContext):
    await state.update_data(lesson_title=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞ ‚úçÔ∏è:")
    await state.set_state(ModuleCreation.waiting_for_lesson_text)

# –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —É—Ä–æ–∫–∞
@admin_router.message(ModuleCreation.waiting_for_lesson_text)
async def get_lesson_text(message: Message, state: FSMContext):
    await state.update_data(lesson_text=message.text)
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è —É—Ä–æ–∫–∞ üìé (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /skip):")
    await state.set_state(ModuleCreation.waiting_for_lesson_files)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
@admin_router.message(ModuleCreation.waiting_for_lesson_files, F.document)
async def get_lesson_files(message: Message, state: FSMContext):
    file_id = message.document.file_id
    data = await state.get_data()
    files = data.get("lesson_files", [])
    files.append(file_id)
    await state.update_data(lesson_files=files)
    await message.answer("–§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω! –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –µ—â—ë –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /skip.")

# –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
@admin_router.message(Command("skip"), ModuleCreation.waiting_for_lesson_files)
async def skip_lesson_files(message: Message, state: FSMContext):
    await message.answer("–¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æ üé• (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /skip):")
    await state.set_state(ModuleCreation.waiting_for_lesson_video)

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ
@admin_router.message(ModuleCreation.waiting_for_lesson_video, F.video)
async def get_lesson_video(message: Message, state: FSMContext):
    data = await state.get_data()

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞
    lesson = {
        "title": data.get("lesson_title"),
        "content": data.get("lesson_text"),
        "files": data.get("lesson_files", []),
        "videos": [message.video.file_id]
    }

    lessons = data.get("lessons", [])
    lessons.append(lesson)
    await state.update_data(lessons=lessons)

    await message.answer("–í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë —É—Ä–æ–∫ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å?",
                         reply_markup=get_add_new_lesson_keyboard_markup())
    await state.set_state(ModuleCreation.waiting_for_next_action)

# –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
@admin_router.message(Command("skip"), ModuleCreation.waiting_for_lesson_video)
async def skip_lesson_video(message: Message, state: FSMContext):
    data = await state.get_data()

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–∫–∞ –±–µ–∑ –≤–∏–¥–µ–æ
    lesson = {
        "title": data.get("lesson_title"),
        "content": data.get("lesson_text"),
        "files": data.get("lesson_files", []),
        "videos": []
    }

    lessons = data.get("lessons", [])
    lessons.append(lesson)
    await state.update_data(lessons=lessons)

    await message.answer("–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë —É—Ä–æ–∫ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å?",
                         reply_markup=get_add_new_lesson_keyboard_markup())
    await state.set_state(ModuleCreation.waiting_for_next_action)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞
@admin_router.callback_query(F.data == "add_lesson")
async def add_new_lesson(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞ üìñ:")
    await state.set_state(ModuleCreation.waiting_for_lesson_title)

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–¥—É–ª—è
@admin_router.callback_query(F.data == "finish_module")
async def finish_module(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è
    module_title = data.get("module_title")
    module_description = data.get("module_description")
    lessons = data.get("lessons", [])

    if not module_title or not lessons:
        await callback.message.answer("‚ùó –ú–æ–¥—É–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ —É—Ä–æ–∫–æ–≤.")
        return

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥—É–ª—è –≤ –ë–î
    module_id = await create_module(module_title, module_description)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –≤ –ë–î
    for order, lesson in enumerate(lessons, start=1):
        lesson_title = lesson.get("title")
        lesson_content = lesson.get("content")
        lesson_files = lesson.get("files", [])
        lesson_videos = lesson.get("videos", [])

        await add_lesson(
            module_id=module_id,
            title=lesson_title,
            content=lesson_content,
            file_ids=lesson_files,
            video_ids=lesson_videos,
            order=order
        )

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
    await callback.message.answer(f"üìö –ú–æ–¥—É–ª—å '{module_title}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
    await state.clear()


